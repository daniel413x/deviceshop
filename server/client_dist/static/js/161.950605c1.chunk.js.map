{"version":3,"file":"static/js/161.950605c1.chunk.js","mappings":"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","sources":["components/Account/AccountSideCol.tsx","components/Account/Credentials/UploadedImage.tsx","components/Account/Credentials/EditFieldModal.tsx","components/Account/Credentials/Field.tsx","components/Account/Credentials/EditAvatarModal.tsx","pages/Account/Credentials/index.tsx","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js"],"sourcesContent":["import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { accountSideColLinks } from '../../utils/arrays';\nimport Dropdown from '../Dropdown';\nimport List from '../List';\n\nfunction AccountSideCol() {\n  const { pathname } = useLocation();\n  const showInMobile = pathname === '/account';\n  return (\n    <div className={`left-side-col ${showInMobile && 'show'}`}>\n      <div className=\"labeled-col\">\n        <span className=\"label\">\n          Your account\n        </span>\n        <List\n          items={accountSideColLinks}\n          renderAs={({ to, label }) => (\n            <li key={`${to}_navButton`}>\n              <div className=\"divider\" />\n              <Dropdown\n                to={to}\n                label={label}\n              />\n            </li>\n          )}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default AccountSideCol;\n","import React, {\n  useState, useEffect, ChangeEvent, useRef,\n} from 'react';\nimport useInputIncomplete from '../../../hooks/useInputIncomplete';\nimport Button from '../../Button';\n\ninterface UploadedImageProps {\n  buttonClass?: string;\n  imageClass?: string;\n  initialImage?: (string | File);\n  pressedSubmit?: boolean;\n  setPressedSubmit?: (param: boolean) => void;\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  onChangeWith?: () => void;\n  name: string;\n  id?: string;\n  tabbable?: number;\n}\n\nfunction UploadedImage({\n  imageClass,\n  buttonClass,\n  initialImage,\n  pressedSubmit,\n  setPressedSubmit,\n  onChange,\n  onChangeWith,\n  name,\n  id,\n  tabbable,\n}: UploadedImageProps) {\n  const [selectedFile, setSelectedFile] = useState<Blob | MediaSource>();\n  const [preview, setPreview] = useState<string>('');\n  const {\n    warn,\n  } = useInputIncomplete({\n    value: selectedFile,\n    setPressedSubmit,\n    pressedSubmit,\n  });\n  const ref = useRef<HTMLInputElement>(null);\n  const selectFile = (e: ChangeEvent<HTMLInputElement>) => {\n    if (!e.target.files || e.target.files.length === 0) {\n      if (selectedFile) {\n        return;\n      }\n      setSelectedFile(undefined);\n      return;\n    }\n    setSelectedFile(e.target.files[0]);\n  };\n  const handleOnChange = onChange || selectFile;\n  useEffect(() => {\n    if (selectedFile) {\n      if (onChangeWith) {\n        onChangeWith(); // minor usage in EditAvatarModal to unblock the input\n      }\n      const objectUrl = URL.createObjectURL(selectedFile);\n      setPreview(objectUrl);\n      return () => URL.revokeObjectURL(objectUrl);\n    }\n  }, [selectedFile]);\n  useEffect(() => {\n    if (typeof initialImage === 'string') { // must be existing file from /static\n      setPreview(`${process.env.REACT_APP_API_URL}${initialImage}`);\n    } else if (typeof initialImage === 'object') { // must be generated file\n      const {\n        name: imageName,\n        type,\n      } = (initialImage as File);\n      const image = new File([initialImage], imageName, { type });\n      const transfer = new DataTransfer();\n      transfer.items.add(image);\n      ref.current!.files = transfer.files;\n      const objectUrl = URL.createObjectURL(initialImage);\n      setPreview(objectUrl);\n      return () => URL.revokeObjectURL(objectUrl);\n    }\n  }, [initialImage]);\n  return (\n    <Button\n      buttonStyle=\"blank\"\n      className={`uploaded-image button-overlay preview ${buttonClass}`}\n      onClick={() => ref.current?.click()}\n      tabIndex={tabbable}\n    >\n      <img\n        src={preview}\n        alt=\"Uploaded file\"\n        className={`preview ${imageClass}`}\n      />\n      <input\n        id={id}\n        type=\"file\"\n        onChange={handleOnChange}\n        className={`replace-image-input hidden ${warn && 'warn'}`}\n        name={name}\n        // multiple={multiple}\n        ref={ref}\n      />\n      <input\n        id={`${id}_string`}\n        type=\"hidden\"\n        name=\"images\"\n        value={name}\n      />\n      <div className=\"replace-message\">\n        Replace\n      </div>\n    </Button>\n  );\n}\n\nUploadedImage.defaultProps = {\n  id: '',\n  imageClass: '',\n  buttonClass: '',\n  initialImage: '',\n  onChange: undefined,\n  onChangeWith: undefined,\n  pressedSubmit: false,\n  setPressedSubmit: false,\n  tabbable: undefined,\n};\n\nexport default UploadedImage;\n","import React, {\n  useContext, useState, FormEvent, useEffect,\n} from 'react';\nimport Context from '../../../context/context';\nimport { editUser } from '../../../http/userAPI';\nimport { unCamelCase } from '../../../utils/functions';\nimport Button from '../../Button';\nimport CloseButton from '../../CloseButton';\nimport LabeledInput from '../../LabeledInput';\nimport Modal from '../../Modal';\n\ninterface EditFieldModalProps {\n  field: string;\n  previous?: string;\n  close: () => void;\n}\n\nfunction EditFieldModal({\n  close,\n  field,\n  previous,\n}: EditFieldModalProps) {\n  const {\n    notifications,\n    user,\n  } = useContext(Context);\n  const [pressedSubmit, setPressedSubmit] = useState<boolean>(false);\n  const [newValue, setNewValue] = useState<string>('');\n  const [confirmPassword, setConfirmPassword] = useState<string>('');\n  const submit = async (event: FormEvent) => {\n    event.preventDefault();\n    setPressedSubmit(true);\n    try {\n      const updatedUser = await editUser({ [field]: newValue });\n      user.set(updatedUser);\n      close();\n      notifications.message(\n        'Field updated',\n      );\n    } catch (error: any) {\n      notifications.error(\n        error.response.data.message,\n      );\n    }\n  };\n  const fieldReadable = unCamelCase(field);\n  const password = field === 'password';\n  useEffect(() => {\n    if (field) {\n      setPressedSubmit(false);\n      setNewValue('');\n    }\n  }, [field]);\n  return (\n    <Modal\n      show={field}\n      close={close}\n      className=\"edit-field\"\n      id=\"edit-field\"\n      size=\"medium\"\n    >\n      <div className=\"window-header\">\n        <div className=\"left-col\">\n          <span className=\"name\">\n            Change field\n          </span>\n        </div>\n        <CloseButton\n          onMouseDown={close}\n        />\n      </div>\n      <form onSubmit={submit}>\n        <div className=\"body\">\n          <h2 className=\"header\">\n            Enter new value\n          </h2>\n          <LabeledInput\n            label={fieldReadable || 'Field'}\n            input={newValue}\n            setInput={setNewValue}\n            placeholder={previous?.toString() || 'false'}\n            type={password ? 'password' : 'input'}\n            id=\"new-value\"\n          />\n          {password && (\n          <LabeledInput\n            label=\"Confirm password\"\n            input={confirmPassword}\n            setInput={setConfirmPassword}\n            placeholder=\"\"\n            type=\"password\"\n            id=\"confirm-password\"\n          />\n          )}\n        </div>\n        <div className=\"bottom-buttons\">\n          <Button\n            className={`submit-button ${pressedSubmit && 'blocked'} ${password && newValue !== confirmPassword && 'blocked'} ${!newValue && 'blocked'}`}\n            type=\"submit\"\n          >\n            Confirm\n          </Button>\n          <Button\n            onClick={close}\n          >\n            Close\n          </Button>\n        </div>\n      </form>\n    </Modal>\n  );\n}\n\nEditFieldModal.defaultProps = {\n  previous: '',\n};\n\nexport default EditFieldModal;\n","import React from 'react';\nimport { unCamelCase } from '../../../utils/functions';\nimport Button from '../../Button';\nimport RefocusedElement from '../../RefocusedElement';\n\ninterface FieldProps {\n  field: string;\n  value?: string;\n  openEditFieldModal: (editedFieldName: string, previousVal: string) => void;\n}\n\nfunction Field({\n  field,\n  value,\n  openEditFieldModal,\n}: FieldProps) {\n  const avatarField = field === 'avatar';\n  const fieldReadable = unCamelCase(field);\n  return (\n    <div className=\"field\">\n      <div className=\"field-value-col\">\n        <span className=\"key\">\n          {fieldReadable}\n        </span>\n        <span className=\"value\">\n          {!avatarField && (value || 'Blank')}\n          {avatarField && (\n            <img\n              src={`${process.env.REACT_APP_API_URL}${value}`}\n              alt=\"Your avatar\"\n              className=\"avatar\"\n            />\n          )}\n        </span>\n      </div>\n      <RefocusedElement>\n        <Button\n          onClick={openEditFieldModal}\n        >\n          Change\n        </Button>\n      </RefocusedElement>\n    </div>\n  );\n}\n\nField.defaultProps = {\n  value: '',\n};\n\nexport default Field;\n","import React, {\n  useContext, useState, FormEvent,\n} from 'react';\nimport { v4 as uuid } from 'uuid';\nimport Context from '../../../context/context';\nimport { editUser } from '../../../http/userAPI';\nimport { ReactComponent as PlainCheck } from '../../../assets/icons/PlainCheck.svg';\nimport Button from '../../Button';\nimport CloseButton from '../../CloseButton';\nimport Modal from '../../Modal';\nimport UploadedImage from './UploadedImage';\nimport { DEFAULT_AVATAR } from '../../../utils/consts';\n\ninterface EditAvatarModalProps {\n  show: boolean;\n  close: () => void;\n}\n\nfunction EditAvatarModal({\n  close,\n  show,\n}: EditAvatarModalProps) {\n  const { notifications, user } = useContext(Context);\n  const [pressedSubmit, setPressedSubmit] = useState<boolean>(false);\n  const [success, setSuccess] = useState<boolean>(false);\n  const fileString = user.avatar === DEFAULT_AVATAR ? `${uuid()}.jpg` : user.avatar;\n  const submit = async (e: FormEvent<HTMLFormElement>) => {\n    try {\n      e.preventDefault();\n      setPressedSubmit(true);\n      const form = new FormData(e.currentTarget);\n      form.delete('avatar');\n      form.append('avatar', fileString);\n      const { avatar } = await editUser(form);\n      user.setAvatar(avatar);\n      setSuccess(true);\n    } catch (error: any) {\n      notifications.error(\n        `${error.response.data.message}`,\n      );\n    } finally {\n      setPressedSubmit(false);\n    }\n  };\n  const unblock = () => {\n    setSuccess(false);\n    setPressedSubmit(false);\n  };\n  return (\n    <Modal\n      show={show}\n      close={close}\n      className=\"edit-avatar\"\n      id=\"edit-avatar\"\n      size=\"medium\"\n    >\n      <div className=\"window-header\">\n        <div className=\"left-col\">\n          <span className=\"name\">\n            Change field\n          </span>\n        </div>\n        <CloseButton\n          onMouseDown={close}\n        />\n      </div>\n      <form onSubmit={submit}>\n        <div className=\"body\">\n          <UploadedImage\n            name={fileString}\n            initialImage={user.avatar || ''}\n            onChangeWith={() => unblock()}\n          />\n        </div>\n        <div className=\"bottom-buttons\">\n          <Button\n            className={`submit-button ${(pressedSubmit || success) && 'blocked'}`}\n            id=\"edit-avatar-save-button\"\n            type=\"submit\"\n          >\n            {(success) && <PlainCheck />}\n            {`${(success) ? 'Your avatar was changed' : 'Save'}`}\n          </Button>\n          <Button\n            onClick={close}\n          >\n            Close\n          </Button>\n        </div>\n      </form>\n    </Modal>\n  );\n}\n\nexport default EditAvatarModal;\n","import React, { useContext, useState } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport EditFieldModal from '../../../components/Account/Credentials/EditFieldModal';\nimport Context from '../../../context/context';\nimport List from '../../../components/List';\nimport Field from '../../../components/Account/Credentials/Field';\nimport EditAvatarModal from '../../../components/Account/Credentials/EditAvatarModal';\nimport ColumnedPage from '../../../components/ColumnedPage';\nimport AccountSideCol from '../../../components/Account/AccountSideCol';\n\nfunction Credentials() {\n  const {\n    user,\n  } = useContext(Context);\n  const [editedField, setEditedField] = useState<string>('');\n  const [showEditAvatar, setShowEditAvatar] = useState<boolean>(false);\n  const [previous, setPrevious] = useState<string>('');\n  const openEditFieldModal = (editedFieldName: string, previousVal?: string) => {\n    setEditedField(editedFieldName);\n    setPrevious(previousVal || '');\n  };\n  const closeEditFieldModal = () => {\n    setEditedField('');\n    setPrevious('');\n  };\n  const boxes = [\n    {\n      field: 'avatar',\n      value: user.avatar,\n    },\n    {\n      field: 'firstName',\n      value: user.firstName,\n    },\n    {\n      field: 'lastName',\n      value: user.lastName,\n    },\n    {\n      field: 'password',\n      value: '***',\n    },\n    {\n      field: 'phoneNumber',\n      value: user.phoneNumber,\n    },\n  ];\n  return (\n    <ColumnedPage\n      id=\"credentials\"\n      header=\"Your account details\"\n      leftSideCol={<AccountSideCol />}\n\n    >\n      <EditFieldModal\n        field={editedField}\n        previous={previous}\n        close={closeEditFieldModal}\n      />\n      <EditAvatarModal\n        show={showEditAvatar}\n        close={() => setShowEditAvatar(false)}\n      />\n      <List\n        childrenBefore\n        className=\"field-ul\"\n        items={boxes}\n        renderAs={((box) => (\n          <li key={box.field}>\n            <Field\n              field={box.field}\n              value={box.value}\n              openEditFieldModal={box.field === 'avatar' ? () => setShowEditAvatar(true) : () => openEditFieldModal(box.field, box.value)}\n            />\n          </li>\n        ))}\n      />\n    </ColumnedPage>\n  );\n}\n\nexport default observer(Credentials);\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;"],"names":["showInMobile","useLocation","pathname","className","items","accountSideColLinks","renderAs","to","label","UploadedImage","imageClass","buttonClass","initialImage","pressedSubmit","setPressedSubmit","onChange","onChangeWith","name","id","tabbable","useState","selectedFile","setSelectedFile","preview","setPreview","warn","useInputIncomplete","value","ref","useRef","handleOnChange","e","target","files","length","undefined","useEffect","objectUrl","URL","createObjectURL","revokeObjectURL","process","imageName","type","image","File","transfer","DataTransfer","add","current","buttonStyle","onClick","click","tabIndex","src","alt","defaultProps","EditFieldModal","close","field","previous","useContext","Context","notifications","user","newValue","setNewValue","confirmPassword","setConfirmPassword","submit","event","preventDefault","editUser","updatedUser","set","message","error","response","data","fieldReadable","unCamelCase","password","Modal","show","size","CloseButton","onMouseDown","onSubmit","LabeledInput","input","setInput","placeholder","toString","Button","Field","openEditFieldModal","avatarField","RefocusedElement","success","setSuccess","fileString","avatar","DEFAULT_AVATAR","uuid","form","FormData","currentTarget","delete","append","setAvatar","PlainCheck","observer","editedField","setEditedField","showEditAvatar","setShowEditAvatar","setPrevious","boxes","firstName","lastName","phoneNumber","ColumnedPage","header","leftSideCol","AccountSideCol","List","childrenBefore","box","editedFieldName","previousVal","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","REGEX","byteToHex","i","push","substr","arr","offset","arguments","toLowerCase","validate","TypeError","options","buf","rnds","random","stringify"],"sourceRoot":""}