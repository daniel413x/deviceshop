{"version":3,"file":"static/js/819.deef3c42.chunk.js","mappings":"wKAgCA,IA1BA,WACE,IACMA,EAA4B,YADbC,EAAAA,EAAAA,MAAbC,SAER,OACE,gBAAKC,UAAS,wBAAmBH,GAAgB,QAAjD,UACE,iBAAKG,UAAU,cAAf,WACE,iBAAMA,UAAU,QAAhB,SAAwB,WAGxB,SAAC,IAAD,CACEC,MAAOC,EAAAA,GACPC,SAAU,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACR,2BACE,gBAAKL,UAAU,aACf,SAAC,IAAD,CACEI,GAAIA,EACJC,MAAOA,MAJX,UAAYD,EAAZ,cADQ,QAanB,C,4CCbD,IAVA,YAEsB,IADpBE,EACmB,EADnBA,SAEA,OACE,gBAAKN,UAAU,eAAf,SACGM,GAGN,C,4DCQD,KAAeC,EAAAA,EAAAA,KAdf,YAGqB,IAFnBF,EAEkB,EAFlBA,MACAD,EACkB,EADlBA,GAEA,OACE,SAAC,KAAD,CACEA,GAAIA,EACJJ,UAAU,cAFZ,SAIGK,GAGN,G,gECLD,SAASG,EAAT,GASgC,IAR9BH,EAQ6B,EAR7BA,MACAI,EAO6B,EAP7BA,QACAT,EAM6B,EAN7BA,UACAU,EAK6B,EAL7BA,MACAC,EAI6B,EAJ7BA,GACAC,EAG6B,EAH7BA,QACAC,EAE6B,EAF7BA,KACAC,EAC6B,EAD7BA,MAEA,GAA4BC,EAAAA,EAAAA,WAAkB,GAA9C,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAkB,GAApD,eAAOG,EAAP,KAAkBC,EAAlB,KACMC,GAAMC,EAAAA,EAAAA,QAA0B,OACtCC,EAAAA,EAAAA,GAAkBF,GAAK,kBAAMD,GAAa,EAAnB,KACvBI,EAAAA,EAAAA,YAAU,WACRJ,EAAaV,EACd,GAAE,CAACA,IACJ,IAAIe,EAAe,KAMnB,OALId,GAASQ,EACXM,EAAe,mBACNN,IACTM,EAAe,eAGf,oBACExB,UAAS,kCAA6BA,GACtCoB,IAAKA,EACLK,KAAK,SACLC,UAAW,kBAAMT,GAAU,EAAhB,EACXU,aAAc,kBAAMV,GAAU,EAAhB,EACdW,YAAa,kBAAMX,GAAU,EAAhB,EACbY,aAAc,SAACC,GACTA,EAAEC,QAAU,GACdd,GAAU,EAEb,EACDL,QAASA,EAZX,WAcE,kBACEa,KAAK,SACLZ,KAAMA,EACNC,MAAOA,EACPH,GAAIA,KAEN,gBAAKX,UAAS,uBAAkBS,GAAW,UAA7B,YAA0CO,GAAU,SAApD,YAAgEQ,MAC9E,iBAAMxB,UAAU,QAAhB,SACGK,MAIR,CAEDG,EAAsBwB,aAAe,CACnCtB,OAAO,EACPV,UAAW,GACXW,GAAI,GACJE,KAAM,GACNC,MAAO,IAGT,K,6RCzDA,SAASmB,EAAT,GAKyB,IAJvBC,EAIsB,EAJtBA,KACAC,EAGsB,EAHtBA,MACAC,EAEsB,EAFtBA,OACAC,EACsB,EADtBA,UAGEC,GACEC,EAAAA,EAAAA,YAAWC,EAAAA,GADbF,cAEF,GAAkCvB,EAAAA,EAAAA,UAA+B,IAAjE,eAAO0B,EAAP,KAAkBC,EAAlB,KACMC,EAAe,SAACC,IACe,IAA/BH,EAAUI,QAAQD,GACpBF,EAAa,GAAD,eAAKD,GAAL,CAAgBG,KAE5BF,EAAaD,EAAUK,QAAO,SAACC,GAAD,OAAkBA,IAAiBH,CAAnC,IAEjC,EACKI,EAAM,mCAAG,WAAOlB,GAAP,8EACbA,EAAEmB,iBAEIC,EACFhB,EADFvB,GAHW,UAKPwC,EAAAA,EAAAA,IAAUD,EAAW,CACzBE,OAAQX,IANG,OAQbJ,EAAUD,EAAOiB,KAAI,SAACC,GACpB,OAAIA,EAAM3C,KAAOuC,GACR,kBAAKI,GAAZ,IAAmBF,OAAQX,IAEtBa,CACR,KACDhB,EAAciB,QACZ,wBAEFpB,IAjBa,2CAAH,sDAwBZ,OALAZ,EAAAA,EAAAA,YAAU,WACJW,GACFQ,EAAaR,EAAKkB,OAErB,GAAE,CAAClB,KAEF,UAACsB,EAAA,EAAD,CACEtB,KAAMA,EACNC,MAAOA,EACPnC,UAAU,mBACVW,GAAG,mBAJL,WAME,iBAAKX,UAAU,gBAAf,WACE,gBAAKA,UAAU,WAAf,SAA0B,mBAG1B,SAACyD,EAAA,EAAD,CACE7B,YAAaO,QAGjB,kBAAMuB,SAAUV,EAAhB,WACE,gBAAKhD,UAAU,OAAf,UACE,gBAAIA,UAAU,gBAAd,WACE,yBACE,SAACQ,EAAA,EAAD,CACEC,QAASgC,EAAUI,QAAQc,EAAAA,KAAY,EACvCtD,MAAOsD,EAAAA,GACP/C,QAAS,kBAAM+B,EAAagB,EAAAA,GAAnB,OAGb,yBACE,SAACnD,EAAA,EAAD,CACEC,QAASgC,EAAUI,QAAQe,EAAAA,KAAc,EACzCvD,MAAOuD,EAAAA,GACPhD,QAAS,kBAAM+B,EAAaiB,EAAAA,GAAnB,OAGb,yBACE,SAACpD,EAAA,EAAD,CACEC,QAASgC,EAAUI,QAAQgB,EAAAA,KAAa,EACxCxD,MAAOwD,EAAAA,GACPjD,QAAS,kBAAM+B,EAAakB,EAAAA,GAAnB,YAKjB,iBAAK7D,UAAU,iBAAf,WACE,SAAC8D,EAAA,EAAD,CACErC,KAAK,SACLzB,UAAU,gBAFZ,SAGC,aAGD,SAAC8D,EAAA,EAAD,CACElD,QAASuB,EADX,SAEC,kBAOV,CAEDF,EAAeD,aAAe,CAC5BE,UAAM6B,GAGR,Q,+CCWA,OAAexD,EAAAA,EAAAA,KA3Gf,WACE,IACQyD,GAAgBzB,EAAAA,EAAAA,YAAWC,EAAAA,GAA3BwB,YAENC,EAEED,EAFFC,qBACAC,EACEF,EADFE,eAEIC,EAA0BH,EAAYG,wBAAwBC,KAAKJ,GACnEK,EAAoBL,EAAYK,kBAAkBD,KAAKJ,GAEvDM,GADexE,EAAAA,EAAAA,MAAbC,SAC6BwE,SAASC,EAAAA,IAC9C,GAA4CzD,EAAAA,EAAAA,YAA5C,eAAO0D,EAAP,KAAuBC,EAAvB,KACA,GAUIC,EAAAA,EAAAA,GAAwB,CAC1BC,eAAe,EACfC,eAAgB,WAChBC,SAAUC,EAAAA,GACVC,aAzBmB,GA0BnBC,sBAAsB,EACtBC,WAAYZ,EAAsB,CAChCa,WAAW,QACTpB,IAjBG3B,EADT,EACEnC,MACAmF,EAFF,EAEEA,gBACAC,EAHF,EAGEA,iBACAC,EAJF,EAIEA,UACAC,EALF,EAKEA,KACAC,EANF,EAMEA,QACAC,EAPF,EAOEA,gBACUpD,EARZ,EAQEqD,SACAC,EATF,EASEA,QA0BF,OAfApE,EAAAA,EAAAA,YAAU,YACR,iBAAC,uGAC2CwD,EAAAA,EAAAA,IAAiB,CACzDI,WAAW,EACXS,WAAW,EACXC,UAAU,IAJb,cACOC,EADP,OAMC3B,EAAwB2B,EAA4BC,OANrD,UAOqChB,EAAAA,EAAAA,IAAiB,CACnDa,WAAW,EACXC,UAAU,IATb,OAOOG,EAPP,OAWC3B,EAAkB2B,EAAsBD,OAXzC,0CAAD,EAaD,GAAE,KAED,UAACE,EAAA,EAAD,CACEtF,GAAG,eACHX,UAAU,oBACVkG,OAAO,SACPC,aAAa,SAACC,EAAA,EAAD,IACbC,OAAK,EACLC,YAAU,EANZ,WAQE,SAAC,EAAD,CACEpE,KAAMuC,EACNtC,MAAO,kBAAMuC,OAAkBX,EAAxB,EACP1B,UAAWA,EACXD,OAAQA,KAEV,iBAAKpC,UAAU,YAAf,WACE,SAACuG,EAAA,EAAD,CACEC,mBAAiB,EACjBf,gBAAiBA,KAEnB,UAACgB,EAAA,EAAD,YACE,SAACC,EAAA,EAAD,CACErG,MAAK,eAAU6D,EAAV,KACL9D,GAAE,WAAMuG,EAAAA,GAAN,YAAqBC,EAAAA,OAEzB,SAACF,EAAA,EAAD,CACErG,MAAK,qBAAgB4D,EAAhB,KACL7D,GAAE,WAAMuG,EAAAA,GAAN,YAAqBC,EAAAA,GAArB,YAAqCpC,EAAAA,aAI7C,SAACqC,EAAA,EAAD,CACE7G,UAAS,4BAAuB2F,GAAW,WAC3C1F,MAAOmC,EACP0E,gBAAc,EACd3G,SAAU,SAACmD,GAAD,OACR,yBACE,SAACyD,EAAA,EAAD,CACEzD,MAAOA,EACPoB,kBAAmBA,KAHdpB,EAAM3C,GADP,KASZ,SAACqG,EAAA,EAAD,CACEzB,KAAMA,EACNP,aA5Fe,GA6FfQ,QAASA,EACTyB,WAAW,YAEb,SAACC,EAAA,EAAD,CACE3B,KAAMA,EACN4B,WAAY/B,EACZC,iBAAkBA,EAClBC,UAAWA,MAIlB,G","sources":["components/Admin/AdminSideCol.tsx","components/Admin/FilterLinks.tsx","components/Admin/ShopProducts/FilterLink.tsx","components/LabeledCheckboxButton.tsx","components/Admin/Orders/NewStatusModal.tsx","pages/Admin/Orders/index.tsx"],"sourcesContent":["import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { adminSideColLinks } from '../../utils/arrays';\nimport Dropdown from '../Dropdown';\nimport List from '../List';\n\nfunction AdminSideCol() {\n  const { pathname } = useLocation();\n  const showInMobile = pathname === '/admin';\n  return (\n    <div className={`left-side-col ${showInMobile && 'show'}`}>\n      <div className=\"labeled-col\">\n        <span className=\"label\">\n          Admin\n        </span>\n        <List\n          items={adminSideColLinks}\n          renderAs={({ to, label }) => (\n            <li key={`${to}_navButton`}>\n              <div className=\"divider\" />\n              <Dropdown\n                to={to}\n                label={label}\n              />\n            </li>\n          )}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default AdminSideCol;\n","import React from 'react';\nimport { Children } from '../../types/types';\n\ninterface FilterLinksProps {\n  children: Children;\n}\n\nfunction FilterLinks({\n  children,\n}: FilterLinksProps) {\n  return (\n    <div className=\"filter-links\">\n      {children}\n    </div>\n  );\n}\n\nexport default FilterLinks;\n","import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { NavLink } from 'react-router-dom';\n\ninterface FilterLinkProps {\n  label: string;\n  to: string;\n}\n\nfunction FilterLink({\n  label,\n  to,\n}: FilterLinkProps) {\n  return (\n    <NavLink\n      to={to}\n      className=\"filter-link\"\n    >\n      {label}\n    </NavLink>\n  );\n}\n\nexport default observer(FilterLink);\n","import React, {\n  useState, useRef, MouseEvent, useEffect,\n} from 'react';\nimport useOnClickOutside from '../hooks/useOnOutsideClick';\n\ninterface LabeledCheckboxButtonProps {\n  label: string;\n  boolean: boolean;\n  onClick: () => void;\n  className?: string;\n  light?: boolean;\n  id?: string;\n  name?: string;\n  value?: any;\n}\n\nfunction LabeledCheckboxButton({\n  label,\n  boolean,\n  className,\n  light,\n  id,\n  onClick,\n  name,\n  value,\n}: LabeledCheckboxButtonProps) {\n  const [active, setActive] = useState<boolean>(false);\n  const [boxShadow, setBoxShadow] = useState<boolean>(false);\n  const ref = useRef<HTMLButtonElement>(null);\n  useOnClickOutside(ref, () => setBoxShadow(false));\n  useEffect(() => {\n    setBoxShadow(boolean);\n  }, [boolean]);\n  let boxShadowVal = null;\n  if (light && boxShadow) {\n    boxShadowVal = 'box-shadow-light';\n  } else if (boxShadow) {\n    boxShadowVal = 'box-shadow';\n  }\n  return (\n    <button\n      className={`labeled-checkbox-button ${className}`}\n      ref={ref}\n      type=\"button\"\n      onMouseUp={() => setActive(false)}\n      onMouseLeave={() => setActive(false)}\n      onMouseDown={() => setActive(true)}\n      onMouseEnter={(e: MouseEvent<HTMLButtonElement>) => {\n        if (e.buttons > 0) {\n          setActive(true);\n        }\n      }}\n      onClick={onClick}\n    >\n      <input\n        type=\"hidden\"\n        name={name}\n        value={value}\n        id={id}\n      />\n      <div className={`checkbox-div ${boolean && 'checked'} ${active && 'active'} ${boxShadowVal}`} />\n      <span className=\"label\">\n        {label}\n      </span>\n    </button>\n  );\n}\n\nLabeledCheckboxButton.defaultProps = {\n  light: false,\n  className: '',\n  id: '',\n  name: '',\n  value: '',\n};\n\nexport default LabeledCheckboxButton;\n","import React, {\n  FormEvent, useContext, useEffect, useState,\n} from 'react';\nimport Context from '../../../context/context';\nimport { editOrder } from '../../../http/orderAPI';\nimport { IOrder, OrderStatusStrings } from '../../../types/types';\nimport { CANCELED, DELIVERED, SHIPPED } from '../../../utils/consts';\nimport Button from '../../Button';\nimport CloseButton from '../../CloseButton';\nimport LabeledCheckboxButton from '../../LabeledCheckboxButton';\nimport Modal from '../../Modal';\n\ninterface NewStatusModalProps {\n  show?: IOrder;\n  close: () => void;\n  orders: IOrder[];\n  setOrders: (items: IOrder[]) => void;\n}\n\nfunction NewStatusModal({\n  show,\n  close,\n  orders,\n  setOrders,\n}: NewStatusModalProps) {\n  const {\n    notifications,\n  } = useContext(Context);\n  const [newStatus, setNewStatus] = useState<OrderStatusStrings[]>([]);\n  const toggleStatus = (string: OrderStatusStrings) => {\n    if (newStatus.indexOf(string) === -1) {\n      setNewStatus([...newStatus, string]);\n    } else {\n      setNewStatus(newStatus.filter((statusString) => statusString !== string));\n    }\n  };\n  const submit = async (e: FormEvent) => {\n    e.preventDefault();\n    const {\n      id: updatedId,\n    } = show!;\n    await editOrder(updatedId, {\n      status: newStatus,\n    });\n    setOrders(orders.map((order) => {\n      if (order.id === updatedId) {\n        return { ...order, status: newStatus };\n      }\n      return order;\n    }));\n    notifications.message(\n      'Order status changed',\n    );\n    close();\n  };\n  useEffect(() => {\n    if (show) {\n      setNewStatus(show.status);\n    }\n  }, [show]);\n  return (\n    <Modal\n      show={show}\n      close={close}\n      className=\"new-status-modal\"\n      id=\"new-status-modal\"\n    >\n      <div className=\"window-header\">\n        <div className=\"left-col\">\n          Change status\n        </div>\n        <CloseButton\n          onMouseDown={close}\n        />\n      </div>\n      <form onSubmit={submit}>\n        <div className=\"body\">\n          <ul className=\"checkboxes-ul\">\n            <li>\n              <LabeledCheckboxButton\n                boolean={newStatus.indexOf(SHIPPED) >= 0}\n                label={SHIPPED}\n                onClick={() => toggleStatus(SHIPPED)}\n              />\n            </li>\n            <li>\n              <LabeledCheckboxButton\n                boolean={newStatus.indexOf(DELIVERED) >= 0}\n                label={DELIVERED}\n                onClick={() => toggleStatus(DELIVERED)}\n              />\n            </li>\n            <li>\n              <LabeledCheckboxButton\n                boolean={newStatus.indexOf(CANCELED) >= 0}\n                label={CANCELED}\n                onClick={() => toggleStatus(CANCELED)}\n              />\n            </li>\n          </ul>\n        </div>\n        <div className=\"bottom-buttons\">\n          <Button\n            type=\"submit\"\n            className=\"submit-button\"\n          >\n            Confirm\n          </Button>\n          <Button\n            onClick={close}\n          >\n            Close\n          </Button>\n        </div>\n      </form>\n    </Modal>\n  );\n}\n\nNewStatusModal.defaultProps = {\n  show: undefined,\n};\n\nexport default NewStatusModal;\n","import React, {\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { observer } from 'mobx-react-lite';\nimport List from '../../../components/List';\nimport Search from '../../../components/Search';\nimport { IOrder } from '../../../types/types';\nimport {\n  ADMIN_ROUTE,\n  ORDERS_ROUTE,\n  UNSHIPPED,\n} from '../../../utils/consts';\nimport PaginatedItemsCounter from '../../../components/PaginatedItemsCounter';\nimport PageControl from '../../../components/PageControl';\nimport useQueriedItems from '../../../hooks/useQueriedItems';\nimport NewStatusModal from '../../../components/Admin/Orders/NewStatusModal';\nimport Context from '../../../context/context';\nimport FilterLink from '../../../components/Admin/ShopProducts/FilterLink';\nimport { fetchOrdersAdmin } from '../../../http/orderAPI';\nimport Order from '../../../components/Order';\nimport FilterLinks from '../../../components/Admin/FilterLinks';\nimport ColumnedPage from '../../../components/ColumnedPage';\nimport AdminSideCol from '../../../components/Admin/AdminSideCol';\n\nfunction Orders() {\n  const itemsPerPage = 10;\n  const { adminOrders } = useContext(Context);\n  const {\n    unshippedOrdersCount,\n    allOrdersCount,\n  } = adminOrders;\n  const setUnshippedOrdersCount = adminOrders.setUnshippedOrdersCount.bind(adminOrders);\n  const setAllOrdersCount = adminOrders.setAllOrdersCount.bind(adminOrders);\n  const { pathname } = useLocation();\n  const unshippedOrdersPage = pathname.includes(UNSHIPPED);\n  const [newStatusOrder, setNewStatusOrder] = useState<IOrder>();\n  const {\n    items: orders,\n    fetchPageNumber,\n    pageLimitReached,\n    pageLimit,\n    page,\n    dbCount,\n    setSearchParams,\n    setItems: setOrders,\n    loading,\n  } = useQueriedItems<IOrder>({\n    noFirstRender: true,\n    initialSorting: 'byNewest',\n    fetchAPI: fetchOrdersAdmin,\n    itemsPerPage,\n    concurrentlySetQuery: true,\n    queryProps: unshippedOrdersPage ? {\n      unshipped: true,\n    } : undefined,\n  });\n  useEffect(() => {\n    (async () => {\n      const fetchedUnshippedOrdersCount = await fetchOrdersAdmin({\n        unshipped: true,\n        countOnly: true,\n        distinct: true,\n      } as any);\n      setUnshippedOrdersCount(fetchedUnshippedOrdersCount.count);\n      const fetchedAllOrdersCount = await fetchOrdersAdmin({\n        countOnly: true,\n        distinct: true,\n      } as any);\n      setAllOrdersCount(fetchedAllOrdersCount.count);\n    })();\n  }, []);\n  return (\n    <ColumnedPage\n      id=\"admin-orders\"\n      className=\"admin-search-page\"\n      header=\"Orders\"\n      leftSideCol={<AdminSideCol />}\n      noDiv\n      noEllipses\n    >\n      <NewStatusModal\n        show={newStatusOrder}\n        close={() => setNewStatusOrder(undefined)}\n        setOrders={setOrders}\n        orders={orders}\n      />\n      <div className=\"upper-row\">\n        <Search\n          dontRenderResults\n          setSearchParams={setSearchParams}\n        />\n        <FilterLinks>\n          <FilterLink\n            label={`All (${allOrdersCount})`}\n            to={`/${ADMIN_ROUTE}/${ORDERS_ROUTE}`}\n          />\n          <FilterLink\n            label={`Unshipped (${unshippedOrdersCount})`}\n            to={`/${ADMIN_ROUTE}/${ORDERS_ROUTE}/${UNSHIPPED}`}\n          />\n        </FilterLinks>\n      </div>\n      <List\n        className={`search-results-ul ${loading && 'loading'}`}\n        items={orders}\n        childrenBefore\n        renderAs={(order) => (\n          <li key={order.id}>\n            <Order\n              order={order}\n              setNewStatusOrder={setNewStatusOrder}\n            />\n          </li>\n        )}\n      />\n      <PaginatedItemsCounter\n        page={page}\n        itemsPerPage={itemsPerPage}\n        dbCount={dbCount}\n        descriptor=\"orders\"\n      />\n      <PageControl\n        page={page}\n        changePage={fetchPageNumber}\n        pageLimitReached={pageLimitReached}\n        pageLimit={pageLimit}\n      />\n    </ColumnedPage>\n  );\n}\n\nexport default observer(Orders);\n"],"names":["showInMobile","useLocation","pathname","className","items","adminSideColLinks","renderAs","to","label","children","observer","LabeledCheckboxButton","boolean","light","id","onClick","name","value","useState","active","setActive","boxShadow","setBoxShadow","ref","useRef","useOnClickOutside","useEffect","boxShadowVal","type","onMouseUp","onMouseLeave","onMouseDown","onMouseEnter","e","buttons","defaultProps","NewStatusModal","show","close","orders","setOrders","notifications","useContext","Context","newStatus","setNewStatus","toggleStatus","string","indexOf","filter","statusString","submit","preventDefault","updatedId","editOrder","status","map","order","message","Modal","CloseButton","onSubmit","SHIPPED","DELIVERED","CANCELED","Button","undefined","adminOrders","unshippedOrdersCount","allOrdersCount","setUnshippedOrdersCount","bind","setAllOrdersCount","unshippedOrdersPage","includes","UNSHIPPED","newStatusOrder","setNewStatusOrder","useQueriedItems","noFirstRender","initialSorting","fetchAPI","fetchOrdersAdmin","itemsPerPage","concurrentlySetQuery","queryProps","unshipped","fetchPageNumber","pageLimitReached","pageLimit","page","dbCount","setSearchParams","setItems","loading","countOnly","distinct","fetchedUnshippedOrdersCount","count","fetchedAllOrdersCount","ColumnedPage","header","leftSideCol","AdminSideCol","noDiv","noEllipses","Search","dontRenderResults","FilterLinks","FilterLink","ADMIN_ROUTE","ORDERS_ROUTE","List","childrenBefore","Order","PaginatedItemsCounter","descriptor","PageControl","changePage"],"sourceRoot":""}