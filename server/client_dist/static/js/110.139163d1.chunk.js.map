{"version":3,"file":"static/js/110.139163d1.chunk.js","mappings":"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","sources":["components/LabeledCheckboxButton.tsx","components/PaginatedItemsCounter.tsx","components/SortingDropdown.tsx","hooks/usePagination.tsx","hooks/useQueriedItems.tsx","components/Shop/FilterCheckboxButton.tsx","hooks/useOnOutsideFocus.tsx","components/Shop/FilterMenu.tsx","components/Shop/RemoveFilterButton.tsx","assets/icons/gridview.svg","assets/icons/listview.svg","components/Shop/SortingButtonsRow.tsx","pages/Shop/index.tsx"],"sourcesContent":["import React, {\n  useState, useRef, MouseEvent, useEffect,\n} from 'react';\nimport useOnClickOutside from '../hooks/useOnOutsideClick';\n\ninterface LabeledCheckboxButtonProps {\n  label: string;\n  boolean: boolean;\n  onClick: () => void;\n  className?: string;\n  light?: boolean;\n  id?: string;\n  name?: string;\n  value?: any;\n}\n\nfunction LabeledCheckboxButton({\n  label,\n  boolean,\n  className,\n  light,\n  id,\n  onClick,\n  name,\n  value,\n}: LabeledCheckboxButtonProps) {\n  const [active, setActive] = useState<boolean>(false);\n  const [boxShadow, setBoxShadow] = useState<boolean>(false);\n  const ref = useRef<HTMLButtonElement>(null);\n  useOnClickOutside(ref, () => setBoxShadow(false));\n  useEffect(() => {\n    setBoxShadow(boolean);\n  }, [boolean]);\n  let boxShadowVal = null;\n  if (light && boxShadow) {\n    boxShadowVal = 'box-shadow-light';\n  } else if (boxShadow) {\n    boxShadowVal = 'box-shadow';\n  }\n  return (\n    <button\n      className={`labeled-checkbox-button ${className}`}\n      ref={ref}\n      type=\"button\"\n      onMouseUp={() => setActive(false)}\n      onMouseLeave={() => setActive(false)}\n      onMouseDown={() => setActive(true)}\n      onMouseEnter={(e: MouseEvent<HTMLButtonElement>) => {\n        if (e.buttons > 0) {\n          setActive(true);\n        }\n      }}\n      onClick={onClick}\n    >\n      <input\n        type=\"hidden\"\n        name={name}\n        value={value}\n        id={id}\n      />\n      <div className={`checkbox-div ${boolean && 'checked'} ${active && 'active'} ${boxShadowVal}`} />\n      <span className=\"label\">\n        {label}\n      </span>\n    </button>\n  );\n}\n\nLabeledCheckboxButton.defaultProps = {\n  light: false,\n  className: '',\n  id: '',\n  name: '',\n  value: '',\n};\n\nexport default LabeledCheckboxButton;\n","import React from 'react';\n\ninterface PaginatedItemsCounterProps {\n  page: number;\n  itemsPerPage: number;\n  dbCount: number;\n  descriptor: string;\n}\n\nfunction PaginatedItemsCounter({\n  page,\n  itemsPerPage,\n  dbCount,\n  descriptor,\n}: PaginatedItemsCounterProps) {\n  const currentPageCount = itemsPerPage * page;\n  return (\n    <span className=\"paginated-items-counter\">\n      {currentPageCount > dbCount ? dbCount : currentPageCount}\n      {' '}\n      of\n      {' '}\n      <span className=\"db-count\">\n        {dbCount}\n      </span>\n      {' '}\n      {descriptor}\n    </span>\n  );\n}\n\nexport default PaginatedItemsCounter;\n","import React from 'react';\nimport { INavButton } from '../types/types';\nimport Dropdown from './Dropdown';\n\ntype SortButton = Omit<INavButton, 'to'>;\n\ninterface SortingDropdownProps {\n  sortButtons: SortButton[];\n  label: string;\n}\n\nfunction SortingDropdown({\n  sortButtons,\n  label,\n}: SortingDropdownProps) {\n  return (\n    <div className=\"sort-dropdown\">\n      <span>\n        Sort by:\n      </span>\n      <Dropdown\n        label={label || sortButtons[0].label}\n        to={sortButtons}\n        dropdownIcon=\"angle\"\n        colorStyle=\"gray\"\n      />\n      <div className=\"divider vertical\" />\n    </div>\n  );\n}\n\nexport default SortingDropdown;\n","import { useState, useEffect } from 'react';\nimport { getMaxPage } from '../utils/functions';\nimport useQuery from './useQuery';\n\ninterface UsePaginationProps {\n  itemsPerPage: number;\n  itemsInDb: number;\n  concurrentlySetQuery?: boolean;\n}\n\ninterface UsePaginationReturn {\n  page: number;\n  pageLimit: number;\n  pageLimitReached: boolean;\n  changePage: (number: number) => void;\n  nextPage: () => void;\n  prevPage: () => void;\n}\n\nconst usePagination = ({\n  itemsPerPage,\n  itemsInDb,\n  concurrentlySetQuery,\n}: UsePaginationProps): UsePaginationReturn => {\n  const {\n    searchParams,\n    setSearchParams,\n    searchParamsRecord,\n  } = useQuery(concurrentlySetQuery ? { page: '1' } : {});\n  const pageFromQuery = Number(searchParams.get('page')) || 1;\n  const [page, setPage] = useState<number>(1);\n  const [pageLimit, setPageLimit] = useState<number>(1);\n  const [pageLimitReached, setPageLimitReached] = useState<boolean>(false);\n  const changePage = (number: number) => {\n    const newPage = number > pageLimit || number < 1 ? pageLimit : number;\n    setPage(newPage);\n    if (concurrentlySetQuery) {\n      setSearchParams({ ...searchParamsRecord, page: number.toString() });\n    }\n  };\n  const nextPage = () => changePage(page + 1);\n  const prevPage = () => changePage(page - 1);\n  useEffect(() => {\n    const newPageLimit = getMaxPage(itemsInDb, itemsPerPage);\n    setPageLimit(newPageLimit || 1);\n    if (newPageLimit > 0 && page > newPageLimit) {\n      changePage(newPageLimit);\n    }\n  }, [itemsInDb, itemsPerPage]);\n  useEffect(() => { // accounts for back/forward browser buttons\n    if (page !== pageFromQuery) {\n      setPage(pageFromQuery);\n    }\n  }, [pageFromQuery]);\n  useEffect(() => {\n    if (page === pageLimit) {\n      setPageLimitReached(true);\n    } else {\n      setPageLimitReached(false);\n    }\n  }, [page, pageLimit, pageFromQuery]);\n  return {\n    page,\n    pageLimit,\n    pageLimitReached,\n    changePage,\n    nextPage,\n    prevPage,\n  };\n};\n\nexport default usePagination;\n","import { useEffect, useRef, useState } from 'react';\nimport {\n  QueryReqFetchMultipleAny, SearchParamsRecord, SequelizeFindAndCountAll,\n} from '../types/types';\nimport usePagination from './usePagination';\nimport useQuery from './useQuery';\n\ninterface UseQueriedItemsProps<T> {\n  itemsPerPage: number;\n  fetchAPI: (query: QueryReqFetchMultipleAny<T>) => Promise<SequelizeFindAndCountAll<T>>;\n  concurrentlySetQuery?: boolean;\n  initialSorting?: string;\n  queryProps?: QueryReqFetchMultipleAny<T>;\n  noFirstRender?: boolean;\n  handleSearchParams?: (searchParamsRecord: SearchParamsRecord, query: QueryReqFetchMultipleAny<T>) => QueryReqFetchMultipleAny<T>; // if you need search params like ?type=smartphone&brand=apple handled a certain way\n  pageOneOnSearchParamsChange?: boolean;\n  concatOnSearchParamsChange?: boolean;\n  concatOnFetchPageNumber?: boolean;\n}\n\ninterface UseQueriedItemsReturn<T> {\n  items: T[];\n  loading: boolean;\n  fetchAndSort: (string: string) => void;\n  fetchPageNumber: (page: number) => void;\n  changePage: (page: number) => void;\n  pageLimitReached: boolean;\n  setSorting: (string: string) => void;\n  page: number,\n  sorting: string,\n  pageLimit: number;\n  dbCount: number;\n  setItems: (items: any[]) => void;\n  setSearchParams: (obj: SearchParamsRecord) => void;\n  fetch: () => void;\n}\n\nfunction useQueriedItems<T>({\n  itemsPerPage,\n  fetchAPI,\n  concurrentlySetQuery,\n  initialSorting,\n  queryProps,\n  noFirstRender,\n  handleSearchParams,\n  pageOneOnSearchParamsChange,\n  concatOnSearchParamsChange,\n  concatOnFetchPageNumber,\n}: UseQueriedItemsProps<T>): UseQueriedItemsReturn<T> {\n  const [items, setItems] = useState<T[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [sorting, setSorting] = useState<string>(initialSorting || '');\n  const [dbCount, setDbProductCount] = useState<number>(0);\n  const {\n    page,\n    pageLimitReached,\n    changePage,\n    pageLimit,\n  } = usePagination({\n    itemsPerPage,\n    itemsInDb: dbCount,\n    concurrentlySetQuery,\n  });\n  const {\n    searchParamsRecord,\n    setSearchParams,\n    thereAreSearchParams,\n  } = useQuery();\n  const createQuery: () => QueryReqFetchMultipleAny<T> = () => {\n    let query: any = {\n      limit: itemsPerPage,\n      page,\n      order: {\n        [sorting]: true,\n      },\n      distinct: true,\n      ...queryProps,\n    };\n    if (thereAreSearchParams) {\n      if (handleSearchParams) {\n        query = handleSearchParams(searchParamsRecord, query);\n      } else {\n        const noMutate = { ...searchParamsRecord };\n        const noMutateKeys = Object.keys(noMutate);\n        for (let k = 0; k < noMutateKeys.length; k += 1) {\n          query[noMutateKeys[k]] = noMutate[noMutateKeys[k]];\n        }\n      }\n    }\n    return query;\n  };\n  const fetchAndSort = async (sortString?: string) => {\n    const query = createQuery();\n    query.order = { [sortString || sorting]: true };\n    query.limit = page * itemsPerPage;\n    query.page = 1;\n    try {\n      setLoading(true);\n      const fetchedItems = await fetchAPI(query);\n      setItems(fetchedItems.rows);\n      setSorting(sortString || sorting);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetch = async (addedParams?: QueryReqFetchMultipleAny<T>) => {\n    const query = createQuery();\n    try {\n      setLoading(true);\n      const fetchedItems = await fetchAPI({ ...query, ...addedParams });\n      setItems(concatOnSearchParamsChange ? items.concat(fetchedItems.rows) : fetchedItems.rows);\n      setDbProductCount(fetchedItems.count);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchPageNumber = async (pageArg: number) => {\n    changePage(pageArg);\n    const query = createQuery();\n    query.page = pageArg;\n    try {\n      setLoading(true);\n      const fetchedItems = await fetchAPI({ ...query });\n      setItems(concatOnFetchPageNumber ? items.concat(fetchedItems.rows) : fetchedItems.rows);\n      setDbProductCount(fetchedItems.count);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const ref = useRef<boolean>(true); // prevent double fetch on render\n  useEffect(() => {\n    if (noFirstRender && ref.current) {\n      ref.current = false;\n      return;\n    }\n    if (pageOneOnSearchParamsChange) {\n      changePage(1);\n      fetch({ page: 1 });\n      return;\n    }\n    fetch();\n  }, [searchParamsRecord]);\n  return {\n    items,\n    setItems,\n    loading,\n    fetchAndSort,\n    pageLimitReached,\n    sorting,\n    setSorting,\n    page,\n    fetchPageNumber,\n    pageLimit,\n    dbCount,\n    setSearchParams,\n    fetch,\n    changePage,\n  };\n}\n\nexport default useQueriedItems;\n","import React, {\n  useContext,\n} from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { SpecificationWithDeviceCount } from '../../types/types';\nimport Context from '../../context/context';\nimport LabeledCheckboxButton from '../LabeledCheckboxButton';\n\ninterface FilterCheckboxButtonProps {\n  specification: SpecificationWithDeviceCount;\n}\n\nfunction FilterCheckboxButton({ specification }: FilterCheckboxButtonProps) {\n  const {\n    id,\n    count,\n    value,\n  } = specification;\n  const {\n    shopPage,\n  } = useContext(Context);\n  const inToggleArray = shopPage.willBeToggled(id);\n  const alreadyActive = shopPage.hasActiveFilter(specification);\n  const toBeToggledOn = inToggleArray && !alreadyActive;\n  const activeAndNotToBeToggledOff = alreadyActive && !inToggleArray;\n  const checked = toBeToggledOn || activeAndNotToBeToggledOff;\n  return (\n    <div\n      className={`labeled-checkbox-button-wrapper ${count === 0 && 'blocked'}`}\n    >\n      <LabeledCheckboxButton\n        onClick={() => {\n          shopPage.handleChangeFiltersToToggle(specification);\n        }}\n        label={value}\n        boolean={checked}\n      />\n      <span className=\"count\">\n        {count}\n      </span>\n    </div>\n  );\n}\n\nexport default observer(FilterCheckboxButton);\n","import { RefObject, useEffect } from 'react';\nimport useKeyPress from './useKeyPress';\n\nfunction useOnOutsideFocus<T extends HTMLElement>(\n  ref: RefObject<T>,\n  handler: (...args: any[]) => void,\n) {\n  const tabPress = useKeyPress('Tab');\n  useEffect(() => {\n    const target = document.activeElement as HTMLElement;\n    if (!ref.current || ref.current.contains(target)) {\n      return;\n    }\n    handler();\n  }, [tabPress]);\n}\n\nexport default useOnOutsideFocus;\n","import React, {\n  useContext, useEffect, useRef, useState, FormEvent,\n} from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { fetchFilteredSpecifications } from '../../http/specificationAPI';\nimport { Filter, SpecificationWithDeviceCount } from '../../types/types';\nimport List from '../List';\nimport useOnOutsideClick from '../../hooks/useOnOutsideClick';\nimport Context from '../../context/context';\nimport LoadingAnimation from '../LoadingAnimation';\nimport Button from '../Button';\nimport FilterCheckboxButton from './FilterCheckboxButton';\nimport useQuery from '../../hooks/useQuery';\nimport { makeSlug } from '../../utils/functions';\nimport AngleDownIcon from '../AngleDownIcon';\nimport useOnOutsideFocus from '../../hooks/useOnOutsideFocus';\nimport useKeyPress from '../../hooks/useKeyPress';\n\ninterface FilterMenuProps {\n  label?: string;\n  specificationKey: string;\n}\n\nfunction FilterMenu({\n  label,\n  specificationKey,\n}: FilterMenuProps) {\n  const {\n    shopPage,\n  } = useContext(Context);\n  const {\n    setSearchParams,\n  } = useQuery();\n  const [loading, setLoading] = useState<boolean>(false);\n  const [toggled, setToggled] = useState<boolean>(false);\n  const [specifications, setSpecifications] = useState<SpecificationWithDeviceCount[]>([]);\n  const divRef = useRef<HTMLDivElement>(null);\n  useOnOutsideClick(divRef, () => setToggled(false));\n  useOnOutsideFocus(divRef, () => setToggled(false));\n  const pressedEscape = useKeyPress('Escape');\n  useEffect(() => {\n    setToggled(false);\n  }, [pressedEscape]);\n  useEffect(() => {\n    if (!toggled || specifications.length > 0) {\n      return;\n    }\n    (async () => {\n      try {\n        setLoading(true);\n        const outsideActiveFilters: Filter[] = shopPage.createFiltersArray(specificationKey);\n        const filteredSpecificationsReqParams = {\n          primarySpecificationKey: specificationKey,\n          filters: outsideActiveFilters,\n        };\n        const fetchedSpecifications: SpecificationWithDeviceCount[] = await fetchFilteredSpecifications(filteredSpecificationsReqParams);\n        const sortedSpecifications = fetchedSpecifications.slice().sort((a, b) => b.count - a.count);\n        setSpecifications(sortedSpecifications.map((spec) => ({\n          ...spec,\n          id: `${spec.key}${spec.value}`.toLowerCase(),\n        })));\n      } finally {\n        setTimeout(() => setLoading(false), 60);\n      }\n    })();\n  }, [toggled]);\n  useEffect(() => {\n    if (!toggled) {\n      setSpecifications([]);\n    }\n  }, [shopPage.activeFilters]);\n  const submit = (e: FormEvent) => {\n    e.preventDefault();\n    shopPage.toggleFilters();\n    const newSearchParams = shopPage.createSearchParamsRecordFromFilters();\n    setSearchParams(newSearchParams);\n  };\n  const showLoadingIcon = loading || specifications.length === 0;\n  const showList = toggled && !loading && specifications.length > 0;\n  const idFromKey = makeSlug(specificationKey);\n  return (\n    <div\n      className={`filter-menu ${toggled && 'toggled'}`}\n      ref={divRef}\n      id={idFromKey}\n    >\n      <button\n        className=\"toggle\"\n        type=\"button\"\n        onClick={() => setToggled(!toggled)}\n      >\n        <span>\n          {label || specificationKey}\n        </span>\n        <AngleDownIcon />\n      </button>\n      <form\n        className={`form-wrapper ${toggled && 'toggled'}`}\n        onSubmit={submit}\n      >\n        {showLoadingIcon && <LoadingAnimation />}\n        {showList && (\n        <List\n          items={specifications}\n          className=\"specifications-ul\"\n          renderAs={((specification) => (\n            <li key={specification.id}>\n              <FilterCheckboxButton\n                specification={specification}\n              />\n            </li>\n          ))}\n        />\n        )}\n        {showList && (\n        <Button\n          className=\"submit-button\"\n          type=\"submit\"\n          buttonStyle=\"secondary\"\n        >\n          <span className=\"text\">\n            Apply\n          </span>\n        </Button>\n        )}\n      </form>\n    </div>\n  );\n}\n\nFilterMenu.defaultProps = {\n  label: '',\n};\n\nexport default observer(FilterMenu);\n","import React, {\n  useContext, useEffect, useState,\n} from 'react';\nimport { SpecificationWithDeviceCount } from '../../types/types';\nimport Context from '../../context/context';\nimport Button from '../Button';\nimport { ReactComponent as CloseIcon } from '../../assets/icons/close.svg';\nimport useQuery from '../../hooks/useQuery';\n\ninterface RemoveFilterButtonProps {\n  specification: SpecificationWithDeviceCount;\n}\n\nfunction RemoveFilterButton({ specification }: RemoveFilterButtonProps) {\n  const [classes, setClasses] = useState<string>('');\n  const {\n    setSearchParams,\n  } = useQuery();\n  const {\n    id,\n    value,\n    key,\n  } = specification;\n  const {\n    shopPage,\n  } = useContext(Context);\n  const onClick = () => {\n    setClasses('');\n    const timer = setTimeout(() => {\n      shopPage.removeFilter(id);\n      const newSearchParams = shopPage.createSearchParamsRecordFromFilters();\n      setSearchParams(newSearchParams);\n    }, 220);\n    return () => clearTimeout(timer);\n  };\n  useEffect(() => {\n    setClasses('shown');\n  }, []);\n  return (\n    <Button\n      className={`remove-filter-button ${classes}`}\n      onClick={onClick}\n      buttonStyle=\"warn\"\n      title=\"Remove filter\"\n    >\n      <div>\n        <span className=\"key\">\n          {key}\n        </span>\n        :\n        {' '}\n        <span className=\"value\">\n          {value}\n        </span>\n      </div>\n      <CloseIcon\n        className=\"icon\"\n      />\n    </Button>\n  );\n}\n\nexport default RemoveFilterButton;\n","var _path, _path2, _path3, _path4;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgGridview(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 15,\n    height: 15,\n    viewBox: \"0 0 15 15\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.375 1.125H1.83333C1.44213 1.125 1.125 1.44213 1.125 1.83333V5.375C1.125 5.7662 1.44213 6.08333 1.83333 6.08333H5.375C5.7662 6.08333 6.08333 5.7662 6.08333 5.375V1.83333C6.08333 1.44213 5.7662 1.125 5.375 1.125Z\",\n    stroke: \"#3D7D99\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.375 8.91663H1.83333C1.44213 8.91663 1.125 9.23376 1.125 9.62496V13.1666C1.125 13.5578 1.44213 13.875 1.83333 13.875H5.375C5.7662 13.875 6.08333 13.5578 6.08333 13.1666V9.62496C6.08333 9.23376 5.7662 8.91663 5.375 8.91663Z\",\n    stroke: \"#3D7D99\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.1667 1.125H9.62508C9.23388 1.125 8.91675 1.44213 8.91675 1.83333V5.375C8.91675 5.7662 9.23388 6.08333 9.62508 6.08333H13.1667C13.558 6.08333 13.8751 5.7662 13.8751 5.375V1.83333C13.8751 1.44213 13.558 1.125 13.1667 1.125Z\",\n    stroke: \"#3D7D99\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.1667 8.91663H9.62508C9.23388 8.91663 8.91675 9.23376 8.91675 9.62496V13.1666C8.91675 13.5578 9.23388 13.875 9.62508 13.875H13.1667C13.558 13.875 13.8751 13.5578 13.8751 13.1666V9.62496C13.8751 9.23376 13.558 8.91663 13.1667 8.91663Z\",\n    stroke: \"#3D7D99\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgGridview);\nexport default __webpack_public_path__ + \"static/media/gridview.6b45174c5bcb9ce8fe70758c4554ee07.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgListview(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 19,\n    height: 19,\n    viewBox: \"0 0 19 19\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6.23438 3.85938V15.1406M2.67188 7.42188H16.3281M2.67188 11.5781H16.3281M2.07812 3.26562H16.9219V15.7344H2.07812V3.26562Z\",\n    stroke: \"#3D7D99\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgListview);\nexport default __webpack_public_path__ + \"static/media/listview.38261d5a26b55c95fb4414b4a9297c1c.svg\";\nexport { ForwardRef as ReactComponent };","import { observer } from 'mobx-react-lite';\nimport React, {\n  useContext,\n} from 'react';\nimport { ReactComponent as GridIcon } from '../../assets/icons/gridview.svg';\nimport { ReactComponent as ListItemIcon } from '../../assets/icons/listview.svg';\nimport Context from '../../context/context';\nimport SortingDropdown from '../SortingDropdown';\n\ninterface SortingButtonsRowProps {\n  sorting: string;\n  setSorting: (string: string) => void;\n}\n\nfunction SortingButtonsRow({\n  sorting,\n  setSorting,\n}: SortingButtonsRowProps) {\n  const {\n    shopPage,\n  } = useContext(Context);\n  let sortingDropdownLabel = '';\n  if (sorting === 'relevance') {\n    sortingDropdownLabel = 'Relevance';\n  }\n  if (sorting === 'byLowestPrice') {\n    sortingDropdownLabel = 'Price: Low to High';\n  }\n  if (sorting === 'byHighestRated') {\n    sortingDropdownLabel = 'Highest Rated';\n  }\n  const sortingButtons = [\n    {\n      label: 'Relevance',\n      callback: () => setSorting('relevance'),\n    },\n    {\n      label: 'Rating',\n      callback: () => setSorting('byHighestRated'),\n    },\n    {\n      label: 'Price: Low to High',\n      callback: () => setSorting('byLowestPrice'),\n    },\n  ];\n  return (\n    <div>\n      <div\n        className=\"sorting-buttons-row\"\n      >\n        <SortingDropdown\n          sortButtons={sortingButtons}\n          label={sortingDropdownLabel}\n        />\n        <div className=\"view-buttons\">\n          <button\n            title=\"Grid view\"\n            type=\"button\"\n            onClick={() => shopPage.changeViewMode('grid')}\n          >\n            <GridIcon\n              className={`view-icon ${shopPage.view === 'grid' && 'active'}`}\n            />\n          </button>\n          <div className=\"divider vertical\" />\n          <button\n            title=\"List view\"\n            type=\"button\"\n            onClick={() => shopPage.changeViewMode('list')}\n          >\n            <ListItemIcon\n              className={`view-icon ${shopPage.view === 'list' && 'active'}`}\n            />\n          </button>\n        </div>\n      </div>\n      <div className=\"divider\" />\n    </div>\n  );\n}\n\nexport default observer(SortingButtonsRow);\n","import React, {\n  useContext, useEffect,\n} from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { NavLink } from 'react-router-dom';\nimport Button from '../../components/Button';\nimport List from '../../components/List';\nimport FilterMenu from '../../components/Shop/FilterMenu';\nimport RemoveFilterButton from '../../components/Shop/RemoveFilterButton';\nimport SortingButtonsRow from '../../components/Shop/SortingButtonsRow';\nimport ShopProductCard from '../../components/ShopProductCard';\nimport Context from '../../context/context';\nimport { shopFilterButtons } from '../../utils/arrays';\nimport { ReactComponent as AngleIcon } from '../../assets/icons/angleup.svg';\nimport useTrackDimensions from '../../hooks/useTrackDimensions';\nimport LoadingAnimation from '../../components/LoadingAnimation';\nimport useQuery from '../../hooks/useQuery';\nimport useBreakpoints from '../../hooks/useBreakpoints';\nimport PaginatedItemsCounter from '../../components/PaginatedItemsCounter';\nimport useQueriedItems from '../../hooks/useQueriedItems';\nimport {\n  IShopProduct,\n  QueryReqFetchMultiple,\n  QueryReqFetchMultipleAny,\n  SearchParamsRecord,\n} from '../../types/types';\nimport { fetchProducts } from '../../http/shopProductAPI';\nimport { getFiltersFromSearchParamsRecord } from '../../utils/functions';\nimport ColumnedPage from '../../components/ColumnedPage';\n\nfunction Shop() {\n  const { width: mainColWidth } = useTrackDimensions('main-col');\n  const { width } = useBreakpoints();\n  const gridGap = 20;\n  const itemWidth = 265;\n  const compositeWidth = itemWidth + gridGap; // each compositeWidth is intended to correspond to the width of a .shop-product-card plus the right side of its grid gap, creating predictable break point matching up with that of the .shop-product-ul's flex container\n  const maxWidth = width! < 767 ? '100%' : (Math.floor(\n    (mainColWidth! + gridGap) / compositeWidth,\n  )\n    * compositeWidth) - gridGap;\n  const { shopPage } = useContext(Context);\n  const listView = shopPage.view === 'list';\n  const {\n    searchParamsRecord,\n    thereAreSearchParams,\n  } = useQuery();\n  useEffect(() => {\n    if (thereAreSearchParams) {\n      shopPage.setFiltersFromSearchParams(searchParamsRecord);\n    } else {\n      shopPage.resetFilters();\n    }\n  }, [searchParamsRecord]);\n  const itemsPerPage = 15;\n  const handleSearchParams = (searchParams: SearchParamsRecord, query: QueryReqFetchMultipleAny<IShopProduct>): QueryReqFetchMultiple<IShopProduct> => {\n    const specifications = getFiltersFromSearchParamsRecord(searchParams);\n    return {\n      ...query,\n      filters: {\n        specifications,\n      },\n    };\n  };\n  const {\n    items: products,\n    fetchPageNumber,\n    pageLimitReached,\n    page,\n    dbCount,\n    sorting,\n    fetchAndSort,\n    loading,\n  } = useQueriedItems<IShopProduct>({\n    initialSorting: 'relevance',\n    fetchAPI: fetchProducts,\n    itemsPerPage,\n    noFirstRender: true,\n    pageOneOnSearchParamsChange: true,\n    concatOnFetchPageNumber: true,\n    handleSearchParams,\n  });\n  const loadMore = async () => {\n    const newPage = page + 1;\n    fetchPageNumber(newPage);\n  };\n  return (\n    <ColumnedPage\n      header=\"Shop all products\"\n      id=\"shop\"\n    >\n      <div\n        style={{ maxWidth }}\n      >\n        <div\n          className=\"product-count-row\"\n          style={{ maxWidth }}\n        >\n          <span className=\"product-count\">\n            <span className=\"figure\">\n              {dbCount}\n            </span>\n            {' '}\n            products\n          </span>\n          <List\n            className=\"remove-filter-button-ul\"\n            items={shopPage.activeFilters}\n            renderAs={((specification) => (\n              <li key={specification.id}>\n                <RemoveFilterButton\n                  specification={specification}\n                />\n              </li>\n            ))}\n          />\n        </div>\n        <List\n          items={shopFilterButtons}\n          className=\"filter-buttons-ul\"\n          renderAs={({ specificationKey, label }) => (\n            <li key={specificationKey}>\n              <FilterMenu\n                specificationKey={specificationKey}\n                label={label}\n              />\n            </li>\n          )}\n        />\n        <SortingButtonsRow\n          sorting={sorting}\n          setSorting={fetchAndSort}\n        />\n      </div>\n      <List\n        items={products}\n        className={`shop-products-ul ${listView && 'list-view'} ${loading && 'loading'}`}\n        renderAs={((product) => (\n          <li key={product.id}>\n            <ShopProductCard\n              product={product}\n              expanded\n              listView={listView}\n            />\n          </li>\n        ))}\n      />\n      {loading && (\n      <LoadingAnimation />\n      )}\n      <div\n        className=\"lower-elements\"\n        style={{ maxWidth }}\n      >\n        <PaginatedItemsCounter\n          page={page}\n          itemsPerPage={itemsPerPage}\n          dbCount={dbCount}\n          descriptor=\"products\"\n        />\n        <div className=\"lower-row\">\n          <Button\n            onClick={loadMore}\n            className={`next-page-button ${pageLimitReached && 'blocked'}`}\n          >\n            Show more\n          </Button>\n          <NavLink\n            to=\"#\"\n            className=\"to-top-button\"\n            title=\"Return to top\"\n            onClick={() => window.scrollTo(0, 0)}\n          >\n            <AngleIcon />\n            To top\n          </NavLink>\n        </div>\n      </div>\n    </ColumnedPage>\n  );\n}\n\nexport default observer(Shop);\n"],"names":["LabeledCheckboxButton","label","boolean","className","light","id","onClick","name","value","useState","active","setActive","boxShadow","setBoxShadow","ref","useRef","useOnClickOutside","useEffect","boxShadowVal","type","onMouseUp","onMouseLeave","onMouseDown","onMouseEnter","e","buttons","defaultProps","page","itemsPerPage","dbCount","descriptor","currentPageCount","sortButtons","to","dropdownIcon","colorStyle","itemsInDb","concurrentlySetQuery","useQuery","searchParams","setSearchParams","searchParamsRecord","pageFromQuery","Number","get","setPage","pageLimit","setPageLimit","pageLimitReached","setPageLimitReached","changePage","number","toString","newPageLimit","getMaxPage","nextPage","prevPage","fetchAPI","initialSorting","queryProps","noFirstRender","handleSearchParams","pageOneOnSearchParamsChange","concatOnSearchParamsChange","concatOnFetchPageNumber","items","setItems","loading","setLoading","sorting","setSorting","setDbProductCount","usePagination","thereAreSearchParams","createQuery","query","limit","order","distinct","noMutate","noMutateKeys","Object","keys","k","length","fetchAndSort","sortString","fetchedItems","rows","fetch","addedParams","concat","count","fetchPageNumber","pageArg","current","observer","specification","shopPage","useContext","Context","inToggleArray","willBeToggled","alreadyActive","hasActiveFilter","checked","handleChangeFiltersToToggle","handler","tabPress","useKeyPress","target","document","activeElement","contains","FilterMenu","specificationKey","toggled","setToggled","specifications","setSpecifications","divRef","useOnOutsideClick","useOnOutsideFocus","pressedEscape","outsideActiveFilters","createFiltersArray","filteredSpecificationsReqParams","primarySpecificationKey","filters","fetchFilteredSpecifications","fetchedSpecifications","sortedSpecifications","slice","sort","a","b","map","spec","key","toLowerCase","setTimeout","activeFilters","showLoadingIcon","showList","idFromKey","makeSlug","AngleDownIcon","onSubmit","preventDefault","toggleFilters","newSearchParams","createSearchParamsRecordFromFilters","LoadingAnimation","List","renderAs","Button","buttonStyle","_path","_path2","_path3","_path4","classes","setClasses","timer","removeFilter","clearTimeout","title","_excluded","_extends","assign","i","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgGridview","_ref","svgRef","titleId","props","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","ForwardRef","SvgListview","sortingDropdownLabel","sortingButtons","callback","SortingDropdown","changeViewMode","view","mainColWidth","useTrackDimensions","maxWidth","useBreakpoints","itemWidth","Math","floor","listView","setFiltersFromSearchParams","resetFilters","useQueriedItems","fetchProducts","getFiltersFromSearchParamsRecord","products","loadMore","ColumnedPage","header","style","shopFilterButtons","product","ShopProductCard","expanded","PaginatedItemsCounter","window","scrollTo"],"sourceRoot":""}